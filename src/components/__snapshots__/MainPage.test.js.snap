// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders MainPage without crashing 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <MainPage
    cats={Array []}
    isPending={false}
    onRequestCats={
      [MockFunction] {
        "calls": Array [
          Array [],
        ],
        "results": Array [
          Object {
            "isThrow": false,
            "value": undefined,
          },
        ],
      }
    }
    searchField=""
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <Header />,
        <SearchBox />,
        <Scrollbars
          autoHeight={false}
          autoHeightMax={200}
          autoHeightMin={0}
          autoHide={false}
          autoHideDuration={200}
          autoHideTimeout={1000}
          hideTracksWhenNotNeeded={false}
          renderThumbHorizontal={[Function]}
          renderThumbVertical={[Function]}
          renderTrackHorizontal={[Function]}
          renderTrackVertical={[Function]}
          renderView={[Function]}
          style={
            Object {
              "height": "80vh",
              "width": "100%",
            }
          }
          tagName="div"
          thumbMinSize={30}
          universal={false}
        >
          <CardList
            cats={Array []}
          />
        </Scrollbars>,
      ],
      "className": "tc",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {},
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "searchChange": undefined,
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "autoHeight": false,
          "autoHeightMax": 200,
          "autoHeightMin": 0,
          "autoHide": false,
          "autoHideDuration": 200,
          "autoHideTimeout": 1000,
          "children": <CardList
            cats={Array []}
          />,
          "hideTracksWhenNotNeeded": false,
          "renderThumbHorizontal": [Function],
          "renderThumbVertical": [Function],
          "renderTrackHorizontal": [Function],
          "renderTrackVertical": [Function],
          "renderView": [Function],
          "style": Object {
            "height": "80vh",
            "width": "100%",
          },
          "tagName": "div",
          "thumbMinSize": 30,
          "universal": false,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "cats": Array [],
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        "type": [Function],
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <Header />,
          <SearchBox />,
          <Scrollbars
            autoHeight={false}
            autoHeightMax={200}
            autoHeightMin={0}
            autoHide={false}
            autoHideDuration={200}
            autoHideTimeout={1000}
            hideTracksWhenNotNeeded={false}
            renderThumbHorizontal={[Function]}
            renderThumbVertical={[Function]}
            renderTrackHorizontal={[Function]}
            renderTrackVertical={[Function]}
            renderView={[Function]}
            style={
              Object {
                "height": "80vh",
                "width": "100%",
              }
            }
            tagName="div"
            thumbMinSize={30}
            universal={false}
          >
            <CardList
              cats={Array []}
            />
          </Scrollbars>,
        ],
        "className": "tc",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {},
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "searchChange": undefined,
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "autoHeight": false,
            "autoHeightMax": 200,
            "autoHeightMin": 0,
            "autoHide": false,
            "autoHideDuration": 200,
            "autoHideTimeout": 1000,
            "children": <CardList
              cats={Array []}
            />,
            "hideTracksWhenNotNeeded": false,
            "renderThumbHorizontal": [Function],
            "renderThumbVertical": [Function],
            "renderTrackHorizontal": [Function],
            "renderTrackVertical": [Function],
            "renderView": [Function],
            "style": Object {
              "height": "80vh",
              "width": "100%",
            },
            "tagName": "div",
            "thumbMinSize": 30,
            "universal": false,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "cats": Array [],
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          "type": [Function],
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
  Symbol(enzyme.__childContext__): null,
}
`;
